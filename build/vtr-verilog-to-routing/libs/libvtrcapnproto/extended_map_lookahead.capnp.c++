// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: extended_map_lookahead.capnp

#include "extended_map_lookahead.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<66> b_c04427c40ca84be1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    225,  75, 168,  12, 196,  39,  68, 192,
     29,   0,   0,   0,   1,   0,   2,   0,
     24,  90, 234,  47,  60, 200, 110, 135,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 101, 110, 100, 101, 100,
     95, 109,  97, 112,  95, 108, 111, 111,
    107,  97, 104, 101,  97, 100,  46,  99,
     97, 112, 110, 112,  58,  86, 112, 114,
     67, 111, 115, 116,  69, 110, 116, 114,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  64,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    100, 101, 108,  97, 121,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 103, 101, 115, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 108, 108,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c04427c40ca84be1 = b_c04427c40ca84be1.words;
#if !CAPNP_LITE
static const uint16_t m_c04427c40ca84be1[] = {1, 0, 2};
static const uint16_t i_c04427c40ca84be1[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c04427c40ca84be1 = {
  0xc04427c40ca84be1, b_c04427c40ca84be1.words, 66, nullptr, m_c04427c40ca84be1,
  0, 3, i_c04427c40ca84be1, nullptr, nullptr, { &s_c04427c40ca84be1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_9edcaca7997e3dad = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    173,  61, 126, 153, 167, 172, 220, 158,
     29,   0,   0,   0,   1,   0,   2,   0,
     24,  90, 234,  47,  60, 200, 110, 135,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 101, 110, 100, 101, 100,
     95, 109,  97, 112,  95, 108, 111, 111,
    107,  97, 104, 101,  97, 100,  46,  99,
     97, 112, 110, 112,  58,  86, 112, 114,
     86, 101,  99, 116, 111, 114,  50,  68,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9edcaca7997e3dad = b_9edcaca7997e3dad.words;
#if !CAPNP_LITE
static const uint16_t m_9edcaca7997e3dad[] = {0, 1};
static const uint16_t i_9edcaca7997e3dad[] = {0, 1};
const ::capnp::_::RawSchema s_9edcaca7997e3dad = {
  0x9edcaca7997e3dad, b_9edcaca7997e3dad.words, 50, nullptr, m_9edcaca7997e3dad,
  0, 2, i_9edcaca7997e3dad, nullptr, nullptr, { &s_9edcaca7997e3dad, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_e50aec82c5bcd046 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     70, 208, 188, 197, 130, 236,  10, 229,
     29,   0,   0,   0,   1,   0,   1,   0,
     24,  90, 234,  47,  60, 200, 110, 135,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 101, 110, 100, 101, 100,
     95, 109,  97, 112,  95, 108, 111, 111,
    107,  97, 104, 101,  97, 100,  46,  99,
     97, 112, 110, 112,  58,  86, 112, 114,
     70, 108, 111,  97, 116,  69, 110, 116,
    114, 121,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e50aec82c5bcd046 = b_e50aec82c5bcd046.words;
#if !CAPNP_LITE
static const uint16_t m_e50aec82c5bcd046[] = {0};
static const uint16_t i_e50aec82c5bcd046[] = {0};
const ::capnp::_::RawSchema s_e50aec82c5bcd046 = {
  0xe50aec82c5bcd046, b_e50aec82c5bcd046.words, 35, nullptr, m_e50aec82c5bcd046,
  0, 1, i_e50aec82c5bcd046, nullptr, nullptr, { &s_e50aec82c5bcd046, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<132> b_8ec43961a8b93de2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    226,  61, 185, 168,  97,  57, 196, 142,
     29,   0,   0,   0,   1,   0,   0,   0,
     24,  90, 234,  47,  60, 200, 110, 135,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 116, 101, 110, 100, 101, 100,
     95, 109,  97, 112,  95, 108, 111, 111,
    107,  97, 104, 101,  97, 100,  46,  99,
     97, 112, 110, 112,  58,  86, 112, 114,
     67, 111, 115, 116,  77,  97, 112,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
     20,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   1,   0,   0,   3,   0,   1,   0,
     72,   1,   0,   0,   2,   0,   1,   0,
     99, 111, 115, 116,  77,  97, 112,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 246,  58,  81,  86, 153, 123, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     50, 246,  58,  81,  86, 153, 123, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 246,  58,  81,  86, 153, 123, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     50, 246,  58,  81,  86, 153, 123, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    225,  75, 168,  12, 196,  39,  68, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 115, 101, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 246,  58,  81,  86, 153, 123, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     50, 246,  58,  81,  86, 153, 123, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    173,  61, 126, 153, 167, 172, 220, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112,  70, 105, 101, 108, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 101, 110,  97, 108, 116, 121,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 246,  58,  81,  86, 153, 123, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     50, 246,  58,  81,  86, 153, 123, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     70, 208, 188, 197, 130, 236,  10, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8ec43961a8b93de2 = b_8ec43961a8b93de2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8ec43961a8b93de2[] = {
  &s_af7b9956513af632,
};
static const uint16_t m_8ec43961a8b93de2[] = {0, 2, 1, 3};
static const uint16_t i_8ec43961a8b93de2[] = {0, 1, 2, 3};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_8ec43961a8b93de2[] = {
  { 16777216,  ::Matrix< ::Matrix< ::VprCostEntry>>::_capnpPrivate::brand() },
  { 16777217,  ::Matrix< ::VprVector2D>::_capnpPrivate::brand() },
  { 16777219,  ::Matrix< ::VprFloatEntry>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_8ec43961a8b93de2 = {
  0x8ec43961a8b93de2, b_8ec43961a8b93de2.words, 132, d_8ec43961a8b93de2, m_8ec43961a8b93de2,
  1, 4, i_8ec43961a8b93de2, nullptr, nullptr, { &s_8ec43961a8b93de2, nullptr, bd_8ec43961a8b93de2, 0, sizeof(bd_8ec43961a8b93de2) / sizeof(bd_8ec43961a8b93de2[0]), nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// VprCostEntry
constexpr uint16_t VprCostEntry::_capnpPrivate::dataWordSize;
constexpr uint16_t VprCostEntry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VprCostEntry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VprCostEntry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// VprVector2D
constexpr uint16_t VprVector2D::_capnpPrivate::dataWordSize;
constexpr uint16_t VprVector2D::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VprVector2D::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VprVector2D::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// VprFloatEntry
constexpr uint16_t VprFloatEntry::_capnpPrivate::dataWordSize;
constexpr uint16_t VprFloatEntry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VprFloatEntry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VprFloatEntry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// VprCostMap
constexpr uint16_t VprCostMap::_capnpPrivate::dataWordSize;
constexpr uint16_t VprCostMap::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VprCostMap::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VprCostMap::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



