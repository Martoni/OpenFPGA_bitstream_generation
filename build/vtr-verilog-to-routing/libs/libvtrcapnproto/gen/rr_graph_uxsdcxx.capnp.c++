// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: rr_graph_uxsdcxx.capnp

#include "rr_graph_uxsdcxx.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<46> b_854301e7f06b01e0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    224,   1, 107, 240, 231,   1,  67, 133,
     27,   0,   0,   0,   2,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 151,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  83, 119, 105, 116,  99,
    104,  84, 121, 112, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 120, 115, 100,  73, 110, 118,  97,
    108, 105, 100,   0,   0,   0,   0,   0,
    109, 117, 120,   0,   0,   0,   0,   0,
    116, 114, 105, 115, 116,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 115, 115,  71,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 111, 114, 116,   0,   0,   0,
     98, 117, 102, 102, 101, 114,   0,   0, }
};
::capnp::word const* const bp_854301e7f06b01e0 = b_854301e7f06b01e0.words;
#if !CAPNP_LITE
static const uint16_t m_854301e7f06b01e0[] = {5, 1, 3, 4, 2, 0};
const ::capnp::_::RawSchema s_854301e7f06b01e0 = {
  0x854301e7f06b01e0, b_854301e7f06b01e0.words, 46, nullptr, m_854301e7f06b01e0,
  0, 6, nullptr, nullptr, nullptr, { &s_854301e7f06b01e0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(SwitchType_854301e7f06b01e0, 854301e7f06b01e0);
static const ::capnp::_::AlignedData<36> b_90627859fdf4877b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    123, 135, 244, 253,  89, 120,  98, 144,
     27,   0,   0,   0,   2,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  80, 105, 110,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 120, 115, 100,  73, 110, 118,  97,
    108, 105, 100,   0,   0,   0,   0,   0,
    111, 112, 101, 110,   0,   0,   0,   0,
    111, 117, 116, 112, 117, 116,   0,   0,
    105, 110, 112, 117, 116,   0,   0,   0, }
};
::capnp::word const* const bp_90627859fdf4877b = b_90627859fdf4877b.words;
#if !CAPNP_LITE
static const uint16_t m_90627859fdf4877b[] = {3, 1, 2, 0};
const ::capnp::_::RawSchema s_90627859fdf4877b = {
  0x90627859fdf4877b, b_90627859fdf4877b.words, 36, nullptr, m_90627859fdf4877b,
  0, 4, nullptr, nullptr, nullptr, { &s_90627859fdf4877b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(PinType_90627859fdf4877b, 90627859fdf4877b);
static const ::capnp::_::AlignedData<48> b_c79abad8705ce7d3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    211, 231,  92, 112, 216, 186, 154, 199,
     27,   0,   0,   0,   2,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  78, 111, 100, 101,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 120, 115, 100,  73, 110, 118,  97,
    108, 105, 100,   0,   0,   0,   0,   0,
     99, 104,  97, 110, 120,   0,   0,   0,
     99, 104,  97, 110, 121,   0,   0,   0,
    115, 111, 117, 114,  99, 101,   0,   0,
    115, 105, 110, 107,   0,   0,   0,   0,
    111, 112, 105, 110,   0,   0,   0,   0,
    105, 112, 105, 110,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c79abad8705ce7d3 = b_c79abad8705ce7d3.words;
#if !CAPNP_LITE
static const uint16_t m_c79abad8705ce7d3[] = {1, 2, 6, 5, 4, 3, 0};
const ::capnp::_::RawSchema s_c79abad8705ce7d3 = {
  0xc79abad8705ce7d3, b_c79abad8705ce7d3.words, 48, nullptr, m_c79abad8705ce7d3,
  0, 7, nullptr, nullptr, nullptr, { &s_c79abad8705ce7d3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(NodeType_c79abad8705ce7d3, c79abad8705ce7d3);
static const ::capnp::_::AlignedData<37> b_d15acf2f660d96fe = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    254, 150,  13, 102,  47, 207,  90, 209,
     27,   0,   0,   0,   2,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  78, 111, 100, 101,  68,
    105, 114, 101,  99, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 120, 115, 100,  73, 110, 118,  97,
    108, 105, 100,   0,   0,   0,   0,   0,
    105, 110,  99,  68, 105, 114,   0,   0,
    100, 101,  99,  68, 105, 114,   0,   0,
     98, 105,  68, 105, 114,   0,   0,   0, }
};
::capnp::word const* const bp_d15acf2f660d96fe = b_d15acf2f660d96fe.words;
#if !CAPNP_LITE
static const uint16_t m_d15acf2f660d96fe[] = {3, 2, 1, 0};
const ::capnp::_::RawSchema s_d15acf2f660d96fe = {
  0xd15acf2f660d96fe, b_d15acf2f660d96fe.words, 37, nullptr, m_d15acf2f660d96fe,
  0, 4, nullptr, nullptr, nullptr, { &s_d15acf2f660d96fe, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(NodeDirection_d15acf2f660d96fe, d15acf2f660d96fe);
static const ::capnp::_::AlignedData<95> b_8e4cac4ed480211a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     26,  33, 128, 212,  78, 172,  76, 142,
     27,   0,   0,   0,   2,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 135,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  76, 111,  99,  83, 105,
    100, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     64,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 120, 115, 100,  73, 110, 118,  97,
    108, 105, 100,   0,   0,   0,   0,   0,
    108, 101, 102, 116,   0,   0,   0,   0,
    114, 105, 103, 104, 116,   0,   0,   0,
    116, 111, 112,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,   0,   0,
    114, 105, 103, 104, 116,  76, 101, 102,
    116,   0,   0,   0,   0,   0,   0,   0,
    114, 105, 103, 104, 116,  66, 111, 116,
    116, 111, 109,   0,   0,   0,   0,   0,
    114, 105, 103, 104, 116,  66, 111, 116,
    116, 111, 109,  76, 101, 102, 116,   0,
    116, 111, 112,  82, 105, 103, 104, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 112,  66, 111, 116, 116, 111,
    109,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 112,  76, 101, 102, 116,   0,
    116, 111, 112,  82, 105, 103, 104, 116,
     66, 111, 116, 116, 111, 109,   0,   0,
    116, 111, 112,  82, 105, 103, 104, 116,
     76, 101, 102, 116,   0,   0,   0,   0,
    116, 111, 112,  66, 111, 116, 116, 111,
    109,  76, 101, 102, 116,   0,   0,   0,
    116, 111, 112,  82, 105, 103, 104, 116,
     66, 111, 116, 116, 111, 109,  76, 101,
    102, 116,   0,   0,   0,   0,   0,   0,
     98, 111, 116, 116, 111, 109,  76, 101,
    102, 116,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8e4cac4ed480211a = b_8e4cac4ed480211a.words;
#if !CAPNP_LITE
static const uint16_t m_8e4cac4ed480211a[] = {4, 15, 1, 2, 6, 7, 5, 3, 9, 13, 10, 8, 11, 14, 12, 0};
const ::capnp::_::RawSchema s_8e4cac4ed480211a = {
  0x8e4cac4ed480211a, b_8e4cac4ed480211a.words, 95, nullptr, m_8e4cac4ed480211a,
  0, 16, nullptr, nullptr, nullptr, { &s_8e4cac4ed480211a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(LocSide_8e4cac4ed480211a, 8e4cac4ed480211a);
static const ::capnp::_::AlignedData<95> b_b3ac93d519d72e2e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     46,  46, 215,  25, 213, 147, 172, 179,
     27,   0,   0,   0,   1,   0,   3,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  67, 104,  97, 110, 110,
    101, 108,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
     99, 104,  97, 110,  87, 105, 100, 116,
    104,  77,  97, 120,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  77,  97, 120,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  77, 105, 110,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,  77,  97, 120,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,  77, 105, 110,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b3ac93d519d72e2e = b_b3ac93d519d72e2e.words;
#if !CAPNP_LITE
static const uint16_t m_b3ac93d519d72e2e[] = {0, 1, 2, 3, 4};
static const uint16_t i_b3ac93d519d72e2e[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_b3ac93d519d72e2e = {
  0xb3ac93d519d72e2e, b_b3ac93d519d72e2e.words, 95, nullptr, m_b3ac93d519d72e2e,
  0, 5, i_b3ac93d519d72e2e, nullptr, nullptr, { &s_b3ac93d519d72e2e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_b27792e17a3fed34 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     52, 237,  63, 122, 225, 146, 119, 178,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  88,  76, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 100, 101, 120,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b27792e17a3fed34 = b_b27792e17a3fed34.words;
#if !CAPNP_LITE
static const uint16_t m_b27792e17a3fed34[] = {0, 1};
static const uint16_t i_b27792e17a3fed34[] = {0, 1};
const ::capnp::_::RawSchema s_b27792e17a3fed34 = {
  0xb27792e17a3fed34, b_b27792e17a3fed34.words, 49, nullptr, m_b27792e17a3fed34,
  0, 2, i_b27792e17a3fed34, nullptr, nullptr, { &s_b27792e17a3fed34, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_863e5872f57df4e0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    224, 244, 125, 245, 114,  88,  62, 134,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  89,  76, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 100, 101, 120,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_863e5872f57df4e0 = b_863e5872f57df4e0.words;
#if !CAPNP_LITE
static const uint16_t m_863e5872f57df4e0[] = {0, 1};
static const uint16_t i_863e5872f57df4e0[] = {0, 1};
const ::capnp::_::RawSchema s_863e5872f57df4e0 = {
  0x863e5872f57df4e0, b_863e5872f57df4e0.words, 49, nullptr, m_863e5872f57df4e0,
  0, 2, i_863e5872f57df4e0, nullptr, nullptr, { &s_863e5872f57df4e0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_9282333865e5bcf9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    249, 188, 229, 101,  56,  51, 130, 146,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  67, 104,  97, 110, 110,
    101, 108, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
     99, 104,  97, 110, 110, 101, 108,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     46,  46, 215,  25, 213, 147, 172, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  76, 105, 115, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     52, 237,  63, 122, 225, 146, 119, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,  76, 105, 115, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    224, 244, 125, 245, 114,  88,  62, 134,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9282333865e5bcf9 = b_9282333865e5bcf9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9282333865e5bcf9[] = {
  &s_863e5872f57df4e0,
  &s_b27792e17a3fed34,
  &s_b3ac93d519d72e2e,
};
static const uint16_t m_9282333865e5bcf9[] = {0, 1, 2};
static const uint16_t i_9282333865e5bcf9[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9282333865e5bcf9 = {
  0x9282333865e5bcf9, b_9282333865e5bcf9.words, 72, d_9282333865e5bcf9, m_9282333865e5bcf9,
  3, 3, i_9282333865e5bcf9, nullptr, nullptr, { &s_9282333865e5bcf9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<95> b_d330ea8930eb55b4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180,  85, 235,  48, 137, 234,  48, 211,
     27,   0,   0,   0,   1,   0,   3,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  84, 105, 109, 105, 110,
    103,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
     99, 105, 110,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 105, 110, 116, 101, 114, 110,  97,
    108,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 117, 116,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 100, 101, 108,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d330ea8930eb55b4 = b_d330ea8930eb55b4.words;
#if !CAPNP_LITE
static const uint16_t m_d330ea8930eb55b4[] = {0, 1, 2, 3, 4};
static const uint16_t i_d330ea8930eb55b4[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_d330ea8930eb55b4 = {
  0xd330ea8930eb55b4, b_d330ea8930eb55b4.words, 95, nullptr, m_d330ea8930eb55b4,
  0, 5, i_d330ea8930eb55b4, nullptr, nullptr, { &s_d330ea8930eb55b4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_9ef5606adf43c4bb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    187, 196,  67, 223, 106,  96, 245, 158,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  83, 105, 122, 105, 110,
    103,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     98, 117, 102,  83, 105, 122, 101,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 117, 120,  84, 114,  97, 110, 115,
     83, 105, 122, 101,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ef5606adf43c4bb = b_9ef5606adf43c4bb.words;
#if !CAPNP_LITE
static const uint16_t m_9ef5606adf43c4bb[] = {0, 1};
static const uint16_t i_9ef5606adf43c4bb[] = {0, 1};
const ::capnp::_::RawSchema s_9ef5606adf43c4bb = {
  0x9ef5606adf43c4bb, b_9ef5606adf43c4bb.words, 50, nullptr, m_9ef5606adf43c4bb,
  0, 2, i_9ef5606adf43c4bb, nullptr, nullptr, { &s_9ef5606adf43c4bb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<94> b_d7ae6dc27d2aaaa1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    161, 170,  42, 125, 194, 109, 174, 215,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  83, 119, 105, 116,  99,
    104,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    224,   1, 107, 240, 231,   1,  67, 133,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180,  85, 235,  48, 137, 234,  48, 211,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    187, 196,  67, 223, 106,  96, 245, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d7ae6dc27d2aaaa1 = b_d7ae6dc27d2aaaa1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d7ae6dc27d2aaaa1[] = {
  &s_854301e7f06b01e0,
  &s_9ef5606adf43c4bb,
  &s_d330ea8930eb55b4,
};
static const uint16_t m_d7ae6dc27d2aaaa1[] = {0, 1, 4, 3, 2};
static const uint16_t i_d7ae6dc27d2aaaa1[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_d7ae6dc27d2aaaa1 = {
  0xd7ae6dc27d2aaaa1, b_d7ae6dc27d2aaaa1.words, 94, d_d7ae6dc27d2aaaa1, m_d7ae6dc27d2aaaa1,
  3, 5, i_d7ae6dc27d2aaaa1, nullptr, nullptr, { &s_d7ae6dc27d2aaaa1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_c98df160ebec5846 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     70,  88, 236, 235,  96, 241, 141, 201,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  83, 119, 105, 116,  99,
    104, 101, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    115, 119, 105, 116,  99, 104, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    161, 170,  42, 125, 194, 109, 174, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c98df160ebec5846 = b_c98df160ebec5846.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c98df160ebec5846[] = {
  &s_d7ae6dc27d2aaaa1,
};
static const uint16_t m_c98df160ebec5846[] = {0};
static const uint16_t i_c98df160ebec5846[] = {0};
const ::capnp::_::RawSchema s_c98df160ebec5846 = {
  0xc98df160ebec5846, b_c98df160ebec5846.words, 39, d_c98df160ebec5846, m_c98df160ebec5846,
  1, 1, i_c98df160ebec5846, nullptr, nullptr, { &s_c98df160ebec5846, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_9a7ae0e83fa47378 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    120, 115, 164,  63, 232, 224, 122, 154,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 103, 109, 101,
    110, 116,  84, 105, 109, 105, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
     99,  80, 101, 114,  77, 101, 116, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  80, 101, 114,  77, 101, 116, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9a7ae0e83fa47378 = b_9a7ae0e83fa47378.words;
#if !CAPNP_LITE
static const uint16_t m_9a7ae0e83fa47378[] = {0, 1};
static const uint16_t i_9a7ae0e83fa47378[] = {0, 1};
const ::capnp::_::RawSchema s_9a7ae0e83fa47378 = {
  0x9a7ae0e83fa47378, b_9a7ae0e83fa47378.words, 52, nullptr, m_9a7ae0e83fa47378,
  0, 2, i_9a7ae0e83fa47378, nullptr, nullptr, { &s_9a7ae0e83fa47378, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_e993ce9e4cbf3f3c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     60,  63, 191,  76, 158, 206, 147, 233,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 103, 109, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    120, 115, 164,  63, 232, 224, 122, 154,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e993ce9e4cbf3f3c = b_e993ce9e4cbf3f3c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e993ce9e4cbf3f3c[] = {
  &s_9a7ae0e83fa47378,
};
static const uint16_t m_e993ce9e4cbf3f3c[] = {0, 1, 2};
static const uint16_t i_e993ce9e4cbf3f3c[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e993ce9e4cbf3f3c = {
  0xe993ce9e4cbf3f3c, b_e993ce9e4cbf3f3c.words, 64, d_e993ce9e4cbf3f3c, m_e993ce9e4cbf3f3c,
  1, 3, i_e993ce9e4cbf3f3c, nullptr, nullptr, { &s_e993ce9e4cbf3f3c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_adb1195070c1c04f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     79, 192, 193, 112,  80,  25, 177, 173,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  83, 101, 103, 109, 101,
    110, 116, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 103, 109, 101, 110, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     60,  63, 191,  76, 158, 206, 147, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_adb1195070c1c04f = b_adb1195070c1c04f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_adb1195070c1c04f[] = {
  &s_e993ce9e4cbf3f3c,
};
static const uint16_t m_adb1195070c1c04f[] = {0};
static const uint16_t i_adb1195070c1c04f[] = {0};
const ::capnp::_::RawSchema s_adb1195070c1c04f = {
  0xadb1195070c1c04f, b_adb1195070c1c04f.words, 39, d_adb1195070c1c04f, m_adb1195070c1c04f,
  1, 1, i_adb1195070c1c04f, nullptr, nullptr, { &s_adb1195070c1c04f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_d4031e7ef02e9159 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89, 145,  46, 240, 126,  30,   3, 212,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  80, 105, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112, 116,  99,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d4031e7ef02e9159 = b_d4031e7ef02e9159.words;
#if !CAPNP_LITE
static const uint16_t m_d4031e7ef02e9159[] = {0, 1};
static const uint16_t i_d4031e7ef02e9159[] = {0, 1};
const ::capnp::_::RawSchema s_d4031e7ef02e9159 = {
  0xd4031e7ef02e9159, b_d4031e7ef02e9159.words, 48, nullptr, m_d4031e7ef02e9159,
  0, 2, i_d4031e7ef02e9159, nullptr, nullptr, { &s_d4031e7ef02e9159, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_d63c7499ab6de9b5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181, 233, 109, 171, 153, 116,  60, 214,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  80, 105, 110,  67, 108,
     97, 115, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    123, 135, 244, 253,  89, 120,  98, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 110, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     89, 145,  46, 240, 126,  30,   3, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d63c7499ab6de9b5 = b_d63c7499ab6de9b5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d63c7499ab6de9b5[] = {
  &s_90627859fdf4877b,
  &s_d4031e7ef02e9159,
};
static const uint16_t m_d63c7499ab6de9b5[] = {1, 0};
static const uint16_t i_d63c7499ab6de9b5[] = {0, 1};
const ::capnp::_::RawSchema s_d63c7499ab6de9b5 = {
  0xd63c7499ab6de9b5, b_d63c7499ab6de9b5.words, 53, d_d63c7499ab6de9b5, m_d63c7499ab6de9b5,
  2, 2, i_d63c7499ab6de9b5, nullptr, nullptr, { &s_d63c7499ab6de9b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<99> b_a53177008d08ddbf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    191, 221,   8, 141,   0, 119,  49, 165,
     27,   0,   0,   0,   1,   0,   2,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  66, 108, 111,  99, 107,
     84, 121, 112, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
    104, 101, 105, 103, 104, 116,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 105, 100, 116, 104,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 105, 110,  67, 108,  97, 115, 115,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    181, 233, 109, 171, 153, 116,  60, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a53177008d08ddbf = b_a53177008d08ddbf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a53177008d08ddbf[] = {
  &s_d63c7499ab6de9b5,
};
static const uint16_t m_a53177008d08ddbf[] = {0, 1, 2, 4, 3};
static const uint16_t i_a53177008d08ddbf[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_a53177008d08ddbf = {
  0xa53177008d08ddbf, b_a53177008d08ddbf.words, 99, d_a53177008d08ddbf, m_a53177008d08ddbf,
  1, 5, i_a53177008d08ddbf, nullptr, nullptr, { &s_a53177008d08ddbf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_9129770cca2918df = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    223,  24,  41, 202,  12, 119,  41, 145,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  66, 108, 111,  99, 107,
     84, 121, 112, 101, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  99, 107,  84, 121, 112,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    191, 221,   8, 141,   0, 119,  49, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9129770cca2918df = b_9129770cca2918df.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9129770cca2918df[] = {
  &s_a53177008d08ddbf,
};
static const uint16_t m_9129770cca2918df[] = {0};
static const uint16_t i_9129770cca2918df[] = {0};
const ::capnp::_::RawSchema s_9129770cca2918df = {
  0x9129770cca2918df, b_9129770cca2918df.words, 39, d_9129770cca2918df, m_9129770cca2918df,
  1, 1, i_9129770cca2918df, nullptr, nullptr, { &s_9129770cca2918df, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<97> b_d812d43c9ade3226 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     38,  50, 222, 154,  60, 212,  18, 216,
     27,   0,   0,   0,   1,   0,   3,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  71, 114, 105, 100,  76,
    111,  99,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  99, 107,  84, 121, 112,
    101,  73, 100,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 105, 103, 104, 116,  79, 102,
    102, 115, 101, 116,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 105, 100, 116, 104,  79, 102, 102,
    115, 101, 116,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d812d43c9ade3226 = b_d812d43c9ade3226.words;
#if !CAPNP_LITE
static const uint16_t m_d812d43c9ade3226[] = {0, 1, 2, 3, 4};
static const uint16_t i_d812d43c9ade3226[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_d812d43c9ade3226 = {
  0xd812d43c9ade3226, b_d812d43c9ade3226.words, 97, nullptr, m_d812d43c9ade3226,
  0, 5, i_d812d43c9ade3226, nullptr, nullptr, { &s_d812d43c9ade3226, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_ae0032574611054a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     74,   5,  17,  70,  87,  50,   0, 174,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  71, 114, 105, 100,  76,
    111,  99, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    103, 114, 105, 100,  76, 111,  99, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     38,  50, 222, 154,  60, 212,  18, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ae0032574611054a = b_ae0032574611054a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ae0032574611054a[] = {
  &s_d812d43c9ade3226,
};
static const uint16_t m_ae0032574611054a[] = {0};
static const uint16_t i_ae0032574611054a[] = {0};
const ::capnp::_::RawSchema s_ae0032574611054a = {
  0xae0032574611054a, b_ae0032574611054a.words, 39, d_ae0032574611054a, m_ae0032574611054a,
  1, 1, i_ae0032574611054a, nullptr, nullptr, { &s_ae0032574611054a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<109> b_dd8c99154a2702e0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    224,   2,  39,  74,  21, 153, 140, 221,
     27,   0,   0,   0,   1,   0,   3,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  78, 111, 100, 101,  76,
    111,  99,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
    112, 116,  99,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 100, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     26,  33, 128, 212,  78, 172,  76, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120, 104, 105, 103, 104,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120, 108, 111, 119,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121, 104, 105, 103, 104,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121, 108, 111, 119,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dd8c99154a2702e0 = b_dd8c99154a2702e0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_dd8c99154a2702e0[] = {
  &s_8e4cac4ed480211a,
};
static const uint16_t m_dd8c99154a2702e0[] = {0, 1, 2, 3, 4, 5};
static const uint16_t i_dd8c99154a2702e0[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_dd8c99154a2702e0 = {
  0xdd8c99154a2702e0, b_dd8c99154a2702e0.words, 109, d_dd8c99154a2702e0, m_dd8c99154a2702e0,
  1, 6, i_dd8c99154a2702e0, nullptr, nullptr, { &s_dd8c99154a2702e0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_c91e489f14db2f52 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     82,  47, 219,  20, 159,  72,  30, 201,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  78, 111, 100, 101,  84,
    105, 109, 105, 110, 103,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     99,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c91e489f14db2f52 = b_c91e489f14db2f52.words;
#if !CAPNP_LITE
static const uint16_t m_c91e489f14db2f52[] = {0, 1};
static const uint16_t i_c91e489f14db2f52[] = {0, 1};
const ::capnp::_::RawSchema s_c91e489f14db2f52 = {
  0xc91e489f14db2f52, b_c91e489f14db2f52.words, 49, nullptr, m_c91e489f14db2f52,
  0, 2, i_c91e489f14db2f52, nullptr, nullptr, { &s_c91e489f14db2f52, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_a8eaef23ffd856f1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    241,  86, 216, 255,  35, 239, 234, 168,
     27,   0,   0,   0,   1,   0,   1,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  78, 111, 100, 101,  83,
    101, 103, 109, 101, 110, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 103, 109, 101, 110, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a8eaef23ffd856f1 = b_a8eaef23ffd856f1.words;
#if !CAPNP_LITE
static const uint16_t m_a8eaef23ffd856f1[] = {0};
static const uint16_t i_a8eaef23ffd856f1[] = {0};
const ::capnp::_::RawSchema s_a8eaef23ffd856f1 = {
  0xa8eaef23ffd856f1, b_a8eaef23ffd856f1.words, 35, nullptr, m_a8eaef23ffd856f1,
  0, 1, i_a8eaef23ffd856f1, nullptr, nullptr, { &s_a8eaef23ffd856f1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_9c9e0023310e7110 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     16, 113,  14,  49,  35,   0, 158, 156,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  77, 101, 116,  97,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c9e0023310e7110 = b_9c9e0023310e7110.words;
#if !CAPNP_LITE
static const uint16_t m_9c9e0023310e7110[] = {0, 1};
static const uint16_t i_9c9e0023310e7110[] = {0, 1};
const ::capnp::_::RawSchema s_9c9e0023310e7110 = {
  0x9c9e0023310e7110, b_9c9e0023310e7110.words, 48, nullptr, m_9c9e0023310e7110,
  0, 2, i_9c9e0023310e7110, nullptr, nullptr, { &s_9c9e0023310e7110, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_9cd291f4f748bfd1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 191,  72, 247, 244, 145, 210, 156,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  77, 101, 116,  97, 100,
     97, 116,  97,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 116,  97, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     16, 113,  14,  49,  35,   0, 158, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9cd291f4f748bfd1 = b_9cd291f4f748bfd1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9cd291f4f748bfd1[] = {
  &s_9c9e0023310e7110,
};
static const uint16_t m_9cd291f4f748bfd1[] = {0};
static const uint16_t i_9cd291f4f748bfd1[] = {0};
const ::capnp::_::RawSchema s_9cd291f4f748bfd1 = {
  0x9cd291f4f748bfd1, b_9cd291f4f748bfd1.words, 38, d_9cd291f4f748bfd1, m_9cd291f4f748bfd1,
  1, 1, i_9cd291f4f748bfd1, nullptr, nullptr, { &s_9cd291f4f748bfd1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<141> b_9de88fd938a89598 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    152, 149, 168,  56, 217, 143, 232, 157,
     27,   0,   0,   0,   1,   0,   2,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  78, 111, 100, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   0,   0,   0,   3,   0,   1,   0,
    232,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
    240,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
    248,   0,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    245,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    244,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
     99,  97, 112,  97,  99, 105, 116, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 114, 101,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    254, 150,  13, 102,  47, 207,  90, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    211, 231,  92, 112, 216, 186, 154, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,  99,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    224,   2,  39,  74,  21, 153, 140, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     82,  47, 219,  20, 159,  72,  30, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 103, 109, 101, 110, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    241,  86, 216, 255,  35, 239, 234, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116,  97, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    209, 191,  72, 247, 244, 145, 210, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9de88fd938a89598 = b_9de88fd938a89598.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9de88fd938a89598[] = {
  &s_9cd291f4f748bfd1,
  &s_a8eaef23ffd856f1,
  &s_c79abad8705ce7d3,
  &s_c91e489f14db2f52,
  &s_d15acf2f660d96fe,
  &s_dd8c99154a2702e0,
};
static const uint16_t m_9de88fd938a89598[] = {0, 1, 2, 4, 7, 6, 5, 3};
static const uint16_t i_9de88fd938a89598[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_9de88fd938a89598 = {
  0x9de88fd938a89598, b_9de88fd938a89598.words, 141, d_9de88fd938a89598, m_9de88fd938a89598,
  6, 8, i_9de88fd938a89598, nullptr, nullptr, { &s_9de88fd938a89598, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_dd14332233a9cfbe = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    190, 207, 169,  51,  34,  51,  20, 221,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  82, 114,  78, 111, 100,
    101, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 100, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    152, 149, 168,  56, 217, 143, 232, 157,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dd14332233a9cfbe = b_dd14332233a9cfbe.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_dd14332233a9cfbe[] = {
  &s_9de88fd938a89598,
};
static const uint16_t m_dd14332233a9cfbe[] = {0};
static const uint16_t i_dd14332233a9cfbe[] = {0};
const ::capnp::_::RawSchema s_dd14332233a9cfbe = {
  0xdd14332233a9cfbe, b_dd14332233a9cfbe.words, 38, d_dd14332233a9cfbe, m_dd14332233a9cfbe,
  1, 1, i_dd14332233a9cfbe, nullptr, nullptr, { &s_dd14332233a9cfbe, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_d6e58dd73383213e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62,  33, 131,  51, 215, 141, 229, 214,
     27,   0,   0,   0,   1,   0,   2,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  69, 100, 103, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
    115, 105, 110, 107,  78, 111, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  78, 111, 100, 101,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 119, 105, 116,  99, 104,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116,  97, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    209, 191,  72, 247, 244, 145, 210, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d6e58dd73383213e = b_d6e58dd73383213e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d6e58dd73383213e[] = {
  &s_9cd291f4f748bfd1,
};
static const uint16_t m_d6e58dd73383213e[] = {3, 0, 1, 2};
static const uint16_t i_d6e58dd73383213e[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d6e58dd73383213e = {
  0xd6e58dd73383213e, b_d6e58dd73383213e.words, 81, d_d6e58dd73383213e, m_d6e58dd73383213e,
  1, 4, i_d6e58dd73383213e, nullptr, nullptr, { &s_d6e58dd73383213e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_9fd7e8ae0321663b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59, 102,  33,   3, 174, 232, 215, 159,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  82, 114,  69, 100, 103,
    101, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 100, 103, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     62,  33, 131,  51, 215, 141, 229, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9fd7e8ae0321663b = b_9fd7e8ae0321663b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9fd7e8ae0321663b[] = {
  &s_d6e58dd73383213e,
};
static const uint16_t m_9fd7e8ae0321663b[] = {0};
static const uint16_t i_9fd7e8ae0321663b[] = {0};
const ::capnp::_::RawSchema s_9fd7e8ae0321663b = {
  0x9fd7e8ae0321663b, b_9fd7e8ae0321663b.words, 38, d_9fd7e8ae0321663b, m_9fd7e8ae0321663b,
  1, 1, i_9fd7e8ae0321663b, nullptr, nullptr, { &s_9fd7e8ae0321663b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<176> b_f5c3de62d3a08dbc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    188, 141, 160, 211,  98, 222, 195, 245,
     27,   0,   0,   0,   1,   0,   0,   0,
    157,  88,  71,  93,  52,  13, 101, 228,
     10,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110,  47, 114, 114,  95, 103,
    114,  97, 112, 104,  95, 117, 120, 115,
    100,  99, 120, 120,  46,  99,  97, 112,
    110, 112,  58,  82, 114,  71, 114,  97,
    112, 104,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     40,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   1,   0,   0,   3,   0,   1,   0,
     20,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   1,   0,   0,   3,   0,   1,   0,
     28,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   1,   0,   0,   3,   0,   1,   0,
     36,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   1,   0,   0,   3,   0,   1,   0,
     60,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   1,   0,   0,   3,   0,   1,   0,
     68,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   1,   0,   0,   3,   0,   1,   0,
     72,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   1,   0,   0,   3,   0,   1,   0,
     76,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   1,   0,   0,   3,   0,   1,   0,
     80,   1,   0,   0,   2,   0,   1,   0,
    116, 111, 111, 108,  67, 111, 109, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 111, 108,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 111, 108,  86, 101, 114, 115,
    105, 111, 110,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 110, 110, 101, 108, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    249, 188, 229, 101,  56,  51, 130, 146,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 119, 105, 116,  99, 104, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     70,  88, 236, 235,  96, 241, 141, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 103, 109, 101, 110, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     79, 192, 193, 112,  80,  25, 177, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  84, 121, 112,
    101, 115,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    223,  24,  41, 202,  12, 119,  41, 145,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 114, 105, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     74,   5,  17,  70,  87,  50,   0, 174,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 114,  78, 111, 100, 101, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    190, 207, 169,  51,  34,  51,  20, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 114,  69, 100, 103, 101, 115,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     59, 102,  33,   3, 174, 232, 215, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f5c3de62d3a08dbc = b_f5c3de62d3a08dbc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f5c3de62d3a08dbc[] = {
  &s_9129770cca2918df,
  &s_9282333865e5bcf9,
  &s_9fd7e8ae0321663b,
  &s_adb1195070c1c04f,
  &s_ae0032574611054a,
  &s_c98df160ebec5846,
  &s_dd14332233a9cfbe,
};
static const uint16_t m_f5c3de62d3a08dbc[] = {6, 3, 7, 9, 8, 5, 4, 0, 1, 2};
static const uint16_t i_f5c3de62d3a08dbc[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
const ::capnp::_::RawSchema s_f5c3de62d3a08dbc = {
  0xf5c3de62d3a08dbc, b_f5c3de62d3a08dbc.words, 176, d_f5c3de62d3a08dbc, m_f5c3de62d3a08dbc,
  7, 10, i_f5c3de62d3a08dbc, nullptr, nullptr, { &s_f5c3de62d3a08dbc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace ucap {

// Channel
constexpr uint16_t Channel::_capnpPrivate::dataWordSize;
constexpr uint16_t Channel::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Channel::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Channel::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// XList
constexpr uint16_t XList::_capnpPrivate::dataWordSize;
constexpr uint16_t XList::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind XList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* XList::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// YList
constexpr uint16_t YList::_capnpPrivate::dataWordSize;
constexpr uint16_t YList::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind YList::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* YList::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Channels
constexpr uint16_t Channels::_capnpPrivate::dataWordSize;
constexpr uint16_t Channels::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Channels::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Channels::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Timing
constexpr uint16_t Timing::_capnpPrivate::dataWordSize;
constexpr uint16_t Timing::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Timing::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Timing::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Sizing
constexpr uint16_t Sizing::_capnpPrivate::dataWordSize;
constexpr uint16_t Sizing::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Sizing::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Sizing::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Switch
constexpr uint16_t Switch::_capnpPrivate::dataWordSize;
constexpr uint16_t Switch::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Switch::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Switch::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Switches
constexpr uint16_t Switches::_capnpPrivate::dataWordSize;
constexpr uint16_t Switches::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Switches::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Switches::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SegmentTiming
constexpr uint16_t SegmentTiming::_capnpPrivate::dataWordSize;
constexpr uint16_t SegmentTiming::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SegmentTiming::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SegmentTiming::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Segment
constexpr uint16_t Segment::_capnpPrivate::dataWordSize;
constexpr uint16_t Segment::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Segment::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Segment::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Segments
constexpr uint16_t Segments::_capnpPrivate::dataWordSize;
constexpr uint16_t Segments::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Segments::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Segments::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Pin
constexpr uint16_t Pin::_capnpPrivate::dataWordSize;
constexpr uint16_t Pin::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Pin::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Pin::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// PinClass
constexpr uint16_t PinClass::_capnpPrivate::dataWordSize;
constexpr uint16_t PinClass::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PinClass::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PinClass::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// BlockType
constexpr uint16_t BlockType::_capnpPrivate::dataWordSize;
constexpr uint16_t BlockType::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlockType::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlockType::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// BlockTypes
constexpr uint16_t BlockTypes::_capnpPrivate::dataWordSize;
constexpr uint16_t BlockTypes::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlockTypes::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlockTypes::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GridLoc
constexpr uint16_t GridLoc::_capnpPrivate::dataWordSize;
constexpr uint16_t GridLoc::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GridLoc::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GridLoc::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GridLocs
constexpr uint16_t GridLocs::_capnpPrivate::dataWordSize;
constexpr uint16_t GridLocs::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GridLocs::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GridLocs::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// NodeLoc
constexpr uint16_t NodeLoc::_capnpPrivate::dataWordSize;
constexpr uint16_t NodeLoc::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind NodeLoc::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NodeLoc::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// NodeTiming
constexpr uint16_t NodeTiming::_capnpPrivate::dataWordSize;
constexpr uint16_t NodeTiming::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind NodeTiming::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NodeTiming::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// NodeSegment
constexpr uint16_t NodeSegment::_capnpPrivate::dataWordSize;
constexpr uint16_t NodeSegment::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind NodeSegment::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* NodeSegment::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Meta
constexpr uint16_t Meta::_capnpPrivate::dataWordSize;
constexpr uint16_t Meta::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Meta::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Meta::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Metadata
constexpr uint16_t Metadata::_capnpPrivate::dataWordSize;
constexpr uint16_t Metadata::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Metadata::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Metadata::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Node
constexpr uint16_t Node::_capnpPrivate::dataWordSize;
constexpr uint16_t Node::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Node::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Node::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// RrNodes
constexpr uint16_t RrNodes::_capnpPrivate::dataWordSize;
constexpr uint16_t RrNodes::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind RrNodes::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RrNodes::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Edge
constexpr uint16_t Edge::_capnpPrivate::dataWordSize;
constexpr uint16_t Edge::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Edge::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Edge::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// RrEdges
constexpr uint16_t RrEdges::_capnpPrivate::dataWordSize;
constexpr uint16_t RrEdges::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind RrEdges::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RrEdges::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// RrGraph
constexpr uint16_t RrGraph::_capnpPrivate::dataWordSize;
constexpr uint16_t RrGraph::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind RrGraph::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RrGraph::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

